// ====== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ======
const TOTAL_CUBES = 180;
const center = { x: 50, y: 50 };
const a = 6;            // –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å (–ø—Ä–æ—Ü–µ–Ω—Ç)
const b = 0.35;         // –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç "–∑–∞–∫—Ä—É—á–∏–≤–∞–Ω–∏—è —Å–ø–∏—Ä–∞–ª–∏"
const thetaStep = 0.35; // —à–∞–≥ —É–≥–ª–∞ –º–µ–∂–¥—É –∫—É–±–∞–º–∏ (—á–µ–º –º–µ–Ω—å—à–µ ‚Äî –ø–ª–æ—Ç–Ω–µ–µ —Å–ø–∏—Ä–∞–ª—å)
const theta0 = Math.PI / 2; // –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∏–∑—É –∏ –∏–¥—ë–º –ø–æ —á–∞—Å–æ–≤–æ–π

const priceMin = 7500;
const priceMax = 35000;

// ====== –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ü–µ–Ω –ø–æ —ç–∫—Å–ø–æ–Ω–µ–Ω—Ç–µ ======
const growth = Math.pow(priceMax / priceMin, 1 / (TOTAL_CUBES - 1));
const priceForIndex = (i) =>
  Math.round((priceMin * Math.pow(growth, i)) / 100) * 100;

const layer = document.getElementById('ringsLayer');
const frag = document.createDocumentFragment();
const tooltip = document.getElementById('tooltip');

for (let i = 0; i < TOTAL_CUBES; i++) {
  const theta = theta0 + i * thetaStep;      // —É–≥–æ–ª
  const r = a + b * theta;                   // —Ä–∞–¥–∏—É—Å —Ä–∞—Å—Ç—ë—Ç –ø–æ —Å–ø–∏—Ä–∞–ª–∏
  const x = center.x + r * Math.cos(theta);  // –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X
  const y = center.y + r * Math.sin(theta);  // –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y
  const price = priceForIndex(TOTAL_CUBES - i - 1);

  const el = document.createElement('button');
  el.className = 'cube';
  el.style.setProperty('--x', x.toFixed(3));
  el.style.setProperty('--y', y.toFixed(3));
  el.dataset.id = i + 1;
  el.textContent = `#${i + 1}`;

  const tipText = `üí∞ ${price.toLocaleString('ru-RU')} ‚ÇΩ/–º–µ—Å`;

  function showTip(evt) {
    tooltip.textContent = tipText;
    const rect = evt.currentTarget.getBoundingClientRect();
    tooltip.style.left = `${rect.left + rect.width / 2 + window.scrollX}px`;
    tooltip.style.top = `${rect.top - 8 + window.scrollY}px`;
    tooltip.classList.remove('hidden');
  }
  function moveTip(evt) {
    const rect = evt.currentTarget.getBoundingClientRect();
    tooltip.style.left = `${rect.left + rect.width / 2 + window.scrollX}px`;
    tooltip.style.top = `${rect.top - 8 + window.scrollY}px`;
  }
  function hideTip() {
    tooltip.classList.add('hidden');
  }

  el.addEventListener('mouseenter', showTip);
  el.addEventListener('mousemove', moveTip);
  el.addEventListener('mouseleave', hideTip);
  el.addEventListener('click', () => openModalForCube(i + 1, price));

  frag.appendChild(el);
}
layer.appendChild(frag);

// ====== –ú–æ–¥–∞–ª–∫–∞ ======
const modal = document.getElementById('modal');
const modalContent = document.getElementById('modalContent');
const modalClose = document.getElementById('modalClose');

modalClose.addEventListener('click', closeModal);
modal.addEventListener('click', (e) => { if (e.target === modal) closeModal(); });

function closeModal() {
  modal.classList.add('hidden');
  modalContent.innerHTML = '';
}

function openModalForCube(id, price) {
  modalContent.innerHTML = `
    <h3>–ö—É–± #${id}</h3>
    <p>–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã: <strong>${price.toLocaleString('ru-RU')} ‚ÇΩ/–º–µ—Å</strong></p>
    <div class="row">
      <button class="btn" id="btnRent">–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å</button>
    </div>
  `;
  modal.classList.remove('hidden');

  document.getElementById('btnRent').onclick = () => {
    modalContent.innerHTML = `
      <h3>–ê—Ä–µ–Ω–¥–∞ –∫—É–±–∞ #${id}</h3>
      <div class="field">
        <label>–ò–º—è / –ö–æ–º–ø–∞–Ω–∏—è</label>
        <input id="f_name" placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?" />
      </div>
      <div class="field">
        <label>–ö–æ–Ω—Ç–∞–∫—Ç—ã</label>
        <input id="f_phone" placeholder="+7 ... –∏–ª–∏ @username" />
      </div>
      <div class="field">
        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
        <textarea id="f_msg" rows="3" placeholder="–°—Å—ã–ª–∫–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç"></textarea>
      </div>
      <div class="row">
        <button class="btn secondary" id="btnCancel">–û—Ç–º–µ–Ω–∞</button>
        <button class="btn" id="btnSend">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      </div>
    `;
    document.getElementById('btnCancel').onclick = () => openModalForCube(id, price);
    document.getElementById('btnSend').onclick = () => {
      alert(`–ó–∞—è–≤–∫–∞ –Ω–∞ –∫—É–± #${id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (–¥–µ–º–æ)`);
      closeModal();
    };
  };
}

// ====== –¶–µ–Ω—Ç—Ä –∏ –ö—É–± –î–æ–±—Ä–∞ ======
document.querySelector('.cube.center')?.addEventListener('click', () => {
  modalContent.innerHTML = `
    <h3>–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫—É–±</h3>
    <p>–ê—É–∫—Ü–∏–æ–Ω –∞—Ä–µ–Ω–¥—ã. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É.</p>
    <div class="field"><label>–°—Ç–∞–≤–∫–∞ (‚ÇΩ)</label><input /></div>
    <div class="field"><label>–ö–æ–Ω—Ç–∞–∫—Ç—ã</label><input /></div>
    <div class="row">
      <button class="btn secondary" onclick="closeModal()">–û—Ç–º–µ–Ω–∞</button>
      <button class="btn" onclick="alert('–°—Ç–∞–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞'); closeModal();">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </div>
  `;
  modal.classList.remove('hidden');
});

document.getElementById('cubeGood')?.addEventListener('click', () => {
  modalContent.innerHTML = `
    <h3>–ö–£–ë –î–û–ë–†–ê ‚Äî –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</h3>
    <div class="field"><label>–ü—Ä–æ–±–ª–µ–º–∞</label><input placeholder="–ö–æ—Ä–æ—Ç–∫–æ –æ –ø—Ä–æ–±–ª–µ–º–µ" /></div>
    <div class="field"><label>–û–ø–∏—Å–∞–Ω–∏–µ</label><textarea rows="4"></textarea></div>
    <div class="field"><label>–ö–æ–Ω—Ç–∞–∫—Ç—ã</label><input placeholder="@telegram –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω" /></div>
    <div class="row">
      <button class="btn secondary" onclick="closeModal()">–û—Ç–º–µ–Ω–∞</button>
      <button class="btn" onclick="alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞'); closeModal();">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </div>
  `;
  modal.classList.remove('hidden');
});
